import numpy as np
import pandas as pd

data = pd.read_csv("https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv")
data.head()

data.tail()

print("The shape of the data is: ")
data.shape

data.isnull().sum()

data.dtypes

data["CRIM"].fillna(data["CRIM"].mean(),inplace=True)
data["ZN"].fillna(data["ZN"].mean(),inplace=True) 
data["INDUS"].fillna(data["INDUS"].mean(),inplace=True) 
data["CHAS"].fillna(data["CHAS"].mean(),inplace=True) 
data["AGE"].fillna(data["AGE"].mean(),inplace=True) 
data["LSTAT"].fillna(data["LSTAT"].mean(),inplace=True) 

data.isnull().sum()  


X = data.iloc[:,0:13]
y = data.iloc[:,-1]

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20,random_state=42)

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)

from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler
from sklearn.pipeline import make_pipeline
model = make_pipeline(StandardScaler(with_mean=False), LinearRegression())
model.fit(X_train, y_train)

model.score(X_test,y_test)

from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print('Mean Squared Error:', mse)
plt.scatter(y_test, y_pred)
plt.xlabel('Actual')
plt.ylabel('Predicted')
plt.title('Actual vs Predicted')
plt.show()


#remove outliers
sns.boxplot(y = df['Second year:   Sem 1'])
Q1 = df['Second year:   Sem 1'].quantile(0.25)
Q3 = df['Second year:   Sem 1'].quantile(0.75)
IQR = Q3 - Q1
lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR
df_filtered = df[(df['Second year:   Sem 1'] > lower_bound) & (df['Second year:   Sem 1'] < upper_bound)]
sns.boxplot(y = df_filtered['Second year:   Sem 1'])